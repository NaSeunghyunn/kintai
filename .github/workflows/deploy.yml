# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

# リージョン、バケット名、CodeDeployアプリ名、CodeDeploy配布グループ名を追加
env:
  AWS_REGION: ap-northeast-1
  S3_BUCKET_NAME: vpc-dev-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: vpc-dev-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: vpc-dev-codedeploy-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # チェックアウト githubからファイルを取得
    - name: Checkout
      uses: actions/checkout@v3

    # JDK 設定
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Gradle build
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.11.1
      with:
        arguments: clean build

    # AWS認証
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Build結果をS3アップ
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

    # S3bucketのファイルを対象としてCodeDeployを実行
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
        
